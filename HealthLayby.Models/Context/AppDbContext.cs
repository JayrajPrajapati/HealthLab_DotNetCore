// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using HealthLayby.Models.Context.Configurations;
using HealthLayby.Models.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using System;
using System.Collections.Generic;
#nullable disable

namespace HealthLayby.Models.Context
{
    public partial class AppDbContext : DbContext
    {
        public AppDbContext(DbContextOptions<AppDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Admin> Admin { get; set; }
        public virtual DbSet<Bank> Bank { get; set; }
        public virtual DbSet<BankBSBDirectory> BankBSBDirectory { get; set; }
        public virtual DbSet<Category> Category { get; set; }
        public virtual DbSet<Clinic> Clinic { get; set; }
        public virtual DbSet<ContentManagement> ContentManagement { get; set; }
        public virtual DbSet<Customer> Customer { get; set; }
        public virtual DbSet<CustomerBank> CustomerBank { get; set; }
        public virtual DbSet<CustomerCreditCard> CustomerCreditCard { get; set; }
        public virtual DbSet<CustomerEmergencyContact> CustomerEmergencyContact { get; set; }
        public virtual DbSet<CustomerFamilyMember> CustomerFamilyMember { get; set; }
        public virtual DbSet<CustomerForgotPasswordToken> CustomerForgotPasswordToken { get; set; }
        public virtual DbSet<CustomerPlans> CustomerPlans { get; set; }
        public virtual DbSet<FAQ> FAQ { get; set; }
        public virtual DbSet<ForgotPasswordToken> ForgotPasswordToken { get; set; }
        public virtual DbSet<GenerateOTP> GenerateOTP { get; set; }
        public virtual DbSet<Merchant> Merchant { get; set; }
        public virtual DbSet<MerchantBank> MerchantBank { get; set; }
        public virtual DbSet<PlanScheduleDeduction> PlanScheduleDeduction { get; set; }
        public virtual DbSet<Rewards> Rewards { get; set; }
        public virtual DbSet<Service> Service { get; set; }
        public virtual DbSet<ServiceDetails> ServiceDetails { get; set; }
        public virtual DbSet<TempDirectPay> TempDirectPay { get; set; }
        public virtual DbSet<TempLayByPlan> TempLayByPlan { get; set; }
        public virtual DbSet<TempLayByTransaction> TempLayByTransaction { get; set; }
        public virtual DbSet<TempWalletTran> TempWalletTran { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.UseCollation("Latin1_General_CI_AS");

            modelBuilder.ApplyConfiguration(new Configurations.AdminConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.BankBSBDirectoryConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.CustomerConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.CustomerBankConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.CustomerCreditCardConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.CustomerEmergencyContactConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.CustomerFamilyMemberConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.CustomerForgotPasswordTokenConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.CustomerPlansConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.ForgotPasswordTokenConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.MerchantConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.MerchantBankConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PlanScheduleDeductionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.ServiceConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.ServiceDetailsConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.TempDirectPayConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.TempLayByPlanConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.TempLayByTransactionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.TempWalletTranConfiguration());
            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
