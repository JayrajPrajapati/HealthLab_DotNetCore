@model ChangePasswordModel

@section HeaderTitle
    {
    <h1 class="head-type1">Change Password</h1>
}

<form asp-route="changePassword" method="post" id="changePasswordForm" >
    @Html.AntiForgeryToken()
    <div class="row align-items-center innersubHead">
        <div class="col-xl-5">
            <h2 class="head-type2">Change Password</h2>
        </div>
    </div>
    <div class="reportOuter">
        <div class="row grid-sp15">
            <div class="col-lg-4 col-sm-6">
                <div class="form-group input-group">
                    <span class="has-float-label">
                        <input asp-for="Password" class="form-control" type="password" />
                        <label asp-for="Password" for="oldpassword">Current Password<span class="text-danger">*</span></label>
                        <i class="eye-off" id="eyeCh"></i>
                    </span>
                    <span asp-validation-for="Password" class="help-block text-danger small"></span>
                </div>
            </div>
            <div class="col-lg-4 col-sm-6">
                <div class="form-group input-group">
                    <span class="has-float-label">
                        <input asp-for="NewPassword" class="form-control" type="password" />
                        <label asp-for="NewPassword">New Password<span class="text-danger">*</span></label>
                        <i class="eye-off" id="toggleNewPassword"></i>
                    </span>
                    <span asp-validation-for="NewPassword" class="help-block text-danger small"></span>
                </div>
            </div>
            <div class="col-lg-4 col-sm-6">
                <div class="form-group input-group">
                    <span class="has-float-label">
                        <input asp-for="ConfirmPassword" class="form-control" type="password" />
                        <label asp-for="ConfirmPassword">Confirm Password<span class="text-danger">*</span></label>
                        <i class="eye-off" id="toggleConfirmPassword"></i>
                    </span>
                    <span asp-validation-for="ConfirmPassword" class="help-block text-danger small"></span>
                </div>
            </div>
        </div>
        <div class="text-right">
            <button type="submit" class="btn-type1">
                <i class="fa fa-save"></i>
                Update
            </button>
        </div>
    </div>
</form>

@section Scripts
{
    <script type="text/javascript">
        $(document).ready(function () {

            var togglePassword = document.querySelector('#eyeCh');
            var password = document.querySelector('#oldpassword');
            if (togglePassword != null) {
                togglePassword.addEventListener('click', function (e) {
                    const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
                    password.setAttribute('type', type);
                    this.classList.toggle('fa-eye-slash');
                });
            }

            var toggleNewPassword = document.querySelector('#toggleNewPassword');
            var txtNewPassword = document.querySelector('#newpassword');
            if (toggleNewPassword != null) {
                toggleNewPassword.addEventListener('click', function (e) {
                    const type = txtNewPassword.getAttribute('type') === 'password' ? 'text' : 'password';
                    txtNewPassword.setAttribute('type', type);
                    this.classList.toggle('fa-eye-slash');
                });
            }

            var toggleConfirmPassword = document.querySelector('#toggleConfirmPassword');
            var txtConfirmPassword = document.querySelector('#confirmpassword');
            if (toggleConfirmPassword != null) {
                toggleConfirmPassword.addEventListener('click', function (e) {
                    const type = txtConfirmPassword.getAttribute('type') === 'password' ? 'text' : 'password';
                    txtConfirmPassword.setAttribute('type', type);
                    this.classList.toggle('fa-eye-slash');
                });
            }

            $("#eyeCh").on("click", function () {
                if ($(this).hasClass("eye-off")) {
                    $(this).addClass("eye-on");
                    $(this).removeClass("eye-off");
                    $("#@Html.IdFor(x => x.Password)").attr("type", "text");
                }
                else {
                    $(this).addClass("eye-off");
                    $(this).removeClass("eye-on");
                    $("#@Html.IdFor(x => x.Password)").attr("type", "password");
                }
            });

            $("#toggleNewPassword").on("click", function () {
                if ($(this).hasClass("eye-off")) {
                    $(this).addClass("eye-on");
                    $(this).removeClass("eye-off");
                    $("#@Html.IdFor(x => x.NewPassword)").attr("type", "text");
                }
                else {
                    $(this).addClass("eye-off");
                    $(this).removeClass("eye-on");
                    $("#@Html.IdFor(x => x.NewPassword)").attr("type", "password");
                }
            });

            $("#toggleConfirmPassword").on("click", function () {
                if ($(this).hasClass("eye-off")) {
                    $(this).addClass("eye-on");
                    $(this).removeClass("eye-off");
                    $("#@Html.IdFor(x => x.ConfirmPassword)").attr("type", "text");
                }
                else {
                    $(this).addClass("eye-off");
                    $(this).removeClass("eye-on");
                    $("#@Html.IdFor(x => x.ConfirmPassword)").attr("type", "password");
                }
            });

            let success = '@TempData[MessageConstant.SuccessMessageKey]';
            let error = '@TempData[MessageConstant.ErrorMessageKey]';

            if (success != undefined && success != null && success.trim() != "") {
                showSuccessMessage(success);
            }

            if (error != undefined && error != null && error.trim() != "") {
                showErrorMessage(error);
            }
        });

    </script>

}